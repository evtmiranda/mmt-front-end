@{
    ViewBag.Title = "cardápio";
}

<div class="container-fluid">
    <div class="col-md-2">
        <h3>cardápio</h3>
        <div class="menu-lateral">
            <ul class="sidebar-nav">
                @if (ViewBag.MenuCardapio != null)
                {
                    foreach (ClassesMarmitex.MenuCardapio mc in ViewBag.MenuCardapio)
                    {
                        //identifica o IDCardapio do cardapio com prioridade de exibicao
                        //if (mc.OrdemExibicao == 1)
                        //{
                        //    ViewBag.IdPrimeiroMenu = @mc.Id;
                        //}

                        //monta a função javascript responsavel por esconder e exibir produtos
                        string EsconderDiv = string.Format("EsconderDiv('menuCardapio', 'idCardapio {0}')", mc.Id);
                        <li><a href="#" class="btnCardapio" onclick="@EsconderDiv">@mc.Nome</a></li>
                    }
                }
            </ul>
        </div>

        <h3>seu carrinho</h3>
        <div id="visualizacaoCarrinho">
            @{
                //Html.RenderPartial("_CarrinhoCompra");
                @Html.Partial("_CarrinhoCompra")
            }
        </div>

        <h3 class="vermelho-marmitex">confira as promoções</h3>
        <div >
            @{
                @Html.Partial("_Promocoes")
            }
        </div>

    </div>

    <div class="col-md-1"></div>
    <div class="col-md-9 cardapio">
        <div class="row">
            @if (ViewBag.Produtos != null)
            {
                foreach (ClassesMarmitex.Produto p in ViewBag.Produtos)
                {
                    //se o IdMenuCardapio do produto atual não for igual ao cardapio com prioridade de exibicao, os produtos são "escondidos"
                    //assim, a tela sempre será iniciada com o cardápio do menu com código de exibicao = 1
                    //if (@ViewBag.IdPrimeiroMenu != @p.IdMenuCardapio) { ViewBag.PrimeiroMenu = "escondeDiv"; }

                    //objeto para realizar um post com ajax e atualizar o conteudo de uma determinada div
                    ClassesMarmitex.DadosPostAjax postAjax = new ClassesMarmitex.DadosPostAjax();
                    postAjax.Recurso = "/Carrinho/AdicionarProduto";
                    postAjax.ViewParcial = "/Carrinho/AtualizarVisualizacaoViewParcial/_CarrinhoCompra";
                    postAjax.DivASerAtualizada = "#visualizacaoCarrinho";

                    string AdicionarCarrinho = string.Format("Post('{0}', '{1}')", @Html.Raw(Json.Encode(postAjax)), @Html.Raw(Json.Encode(@p)));

                    <div class="idCardapio @p.IdMenuCardapio menuCardapio col-md-4">
                        <div class="thumbnail">
                            <img src="@p.Imagem" alt="imagem do produto">
                            <div class="caption">
                                <h3>@p.Nome</h3>
                                <p>
                                    @p.Descricao<br />
                                    R$ @p.Valor
                                </p>

                                <a href="#" class="btn btn-amarelo-sem-animacao" role="button" onclick="@AdicionarCarrinho"><i class="glyphicon glyphicon-plus"></i> adicionar ao pedido</a>
                            </div>
                        </div>
                    </div>
                }
            }
        </div>
    </div>
    <div>
        <div class="row-fluid">
            @*<nav aria-label="...">
                <ul class="pager-cardapio">
                    <li><a href="#">anterior</a></li>
                    <li><a href="#">próximo</a></li>
                </ul>
            </nav>*@

            <div style="text-align: center; margin-top: 3em;">
                <a href="@Session["urlBase"]DetalhesPedido/Index" class="btn btn-pedido btn-lg" role="button">fechar pedido <i class="glyphicon glyphicon-ok"></i></a>
            </div>
        </div>
    </div>

</div>
